(130) Andrew Ng: Opportunities in AI - 2023 - YouTube
https://www.youtube.com/watch?v=5p248yoa3oE

Transcript:
(00:00) [MUSIC PLAYING] It is my pleasure to welcome Dr. Andrew Ng, tonight. Andrew is the managing general partner of AI Fund, founder of DeepLearning.AI and Landing AI, chairman and co-founder of Coursera, and an adjunct professor of Computer Science, here at Stanford. Previously, he had started and led the Google Brain team, which had helped Google adopt modern AI.
(00:39) And he was also director of the Stanford AI lab. About eight million people, 1 in 1,000 persons on the planet, have taken an AI class from him. And through, both, his education and his AI work, he has changed numerous lives. Please welcome Dr. Andrew Ng. [APPLAUSE] Thank you, Lisa. It's good to see everyone.
(01:09) So, what I want to do today is chat to you about some opportunities in AI. So I've been saying AI is a new electricity. One of the difficult things to understand about AI is that it is a general purpose technology, meaning that it's not useful only for one thing but it's useful for lots of different applications, kind of like electricity.
(01:30) If I were to ask you, what is electricity good for? It's not any one thing, it's a lot of things. So what I'd like to do is start off sharing with you how I view the technology landscape, and this will lead into the set of opportunities. So lot of hype, lot of excitement about AI. And I think, a good way to think about AI is as a collection of tools.
(01:51) So this includes, a technique called supervised learning, which is very good at recognizing things or labeling things, and generative AI, which is a relatively new, exciting development. If you're familiar with AI, you may have heard of other tools. But I'm going to talk less about these additional tools, and I'll focus today on what I think are, currently, the two most important tools, which are supervised learning and generative AI.
(02:14) So supervised learning is very good at labeling things or very good at computing input to outputs or A to B mappings, given an input A, give me an output. For Example, given an email, we can use supervised learning to label it as spam or not spam. The most lucrative application of this that I've ever worked on is probably online advertising, where given an ad, we can label if a user likely to click on it, and therefore, show more relevant ads.
(02:40) For self-driving cars, given the sensor readings of a car, we can label it with where are the other cars. One project, that my team, AI Fund, worked on was ship route optimization. Where given a route the ship is taking or considering taking, we can label that with how much fuel we think this will consume, and use this to make ships more fuel efficient.
(02:59) Did a lot of work in automated visual inspection in factories. So you can take a picture of a smartphone, that was just manufactured and label, is there a scratch or any other defect in it. Or if you want to build a restaurant review, reputation monitoring system, you can have a little piece of software that looks at online restaurant reviews, and labels that as positive or negative sentiment.
(03:19) So one nice thing, one cool thing about supervised learning is that it's not useful for one thing, it's useful for all of these different applications, and many more, besides. Let me just walk through, concretely, the workflow one example of a supervised learning, labeling things kind of project. If you want to build a system to label restaurant reviews, you then collect a few data points or collect a data set.
(03:41) Where it say, the pastrami sandwich great, say that is positive. Servers are slow, that's negative. My favorite chicken curry, that's positive. And here, I've shown three data points, but you are building this, you may get thousands of data points like this or thousands of training examples, we call it.
(03:58) And the workflow of a machine learning project, of an AI project is, you get labeled data, maybe thousands of data points. Then you have an AI entry team train an AI model to learn from this data. And then finally, you would find, maybe a cloud service to run the trained AI model. And then you can feed it, best bubble tea I've ever had, and that's positive sentiment.
(04:21) And so, I think the last decade was maybe the decade of large scale supervised learning. What we found, starting about 10, 15 years ago was if you were to train a small AI model, so train a small neural network or small deep learning algorithm, basically, a small AI model, maybe not on a very powerful computer, then as you fed it more data, its performance would get better for a little bit but then it would flatten out.
(04:44) It would plateau, and it would stop being able to use the data to get better and better. But if you were to train a very large AI model, lots of compute on maybe powerful GPUs, then as we scaled up the amount of data we gave the machine learning model, its performance would kind of keep on getting better and better.
(05:03) So this is why when I started and led the Google Brain team, the primary mission that I directed the team to solve, at the time, was let's just build really, really large neural networks, that we then fed a lot of data to. And that recipe, fortunately, worked. And I think the idea of driving large compute and large scale of data, that recipe's really helped us, driven a lot of AI progress over the last decade.
(05:27) So if that was the last decade of AI, I think this decade is turning out to be also doing everything we had in supervised learning but adding to it the exciting tool of generative AI. So many of you, maybe all of you, have played with ChatGPT and Bard, and so on. But just given a piece of text, which you call a prompt, like I love eating, if you run this multiple times, maybe you get bagels cream cheese or my mother's meatloaf or out with friends, and the AI system can generate output like that.
(05:59) Given the amounts of buzz and excitement about generative AI, I thought I'd take just half a slide to say a little bit about how this works. So it turns out that generative AI, at least this type of text generation, the core of it is using supervised learning that inputs output mappings to repeatedly predict the next word.
(06:20) And so, if your system reads, on the internet, a sentence like, my favorite food is a bagel with cream cheese and lox, then this is translated into a few data points, where if it sees, my favorite food is A, in this case, try to guess that the right next word was bagel or my favorite food is a bagel, try to guess the next word is with, and similarly, if it sees that, in this case, the right guess for the next word would have been cream.
(06:48) So by taking texts that you find on the internet or other sources, and by using this input, output, supervised learning to try to repeatedly predict the next word, if you train a very large AI system on hundreds of billions of words, or in the case of the largest models, now more than a trillion words, then you get a large language model like ChatGPT.
(07:08) And there are additional, other important technical details. I talked about predicting the next word. Technically, these systems predict the next subword or part of a word called a token, and then there are other techniques like RLHF for further tuning the AI output to be more helpful, honest, and harmless.
(07:27) But at the heart of it is this using supervised learning to repeatedly predict the next word. That's really what's enabling the exciting, really fantastic progress on large language models. So while many people have seen large language models as a fantastic consumer tool. You can go to a website like ChatGPT's website or Bard's or other large language models and use it as a fantastic tool.
(07:55) There's one other trend, I think is still underappreciated, which is the power of large language models, not just as a consumer tool but as a developer tool. So it turns out that there are applications that used to take me months to build, that a lot of people can now build much faster by using a large language model.
(08:18) So specifically, the workflow for supervised learning, building the restaurant review system, say, would be that you need to get a bunch of labeled data, and maybe that takes a month, we get a few thousand data points. And then have an AI team train, and tune, and really get optimized performance on your AI model.
(08:37) Maybe that'll take three months. Then find a cloud service to run it. Make sure it's running robustly. Make sure it's recognized, maybe that'll take another three months. So pretty realistic timeline for building a commercial grade machine learning system is like 6 to 12 months. And so teams I've led, we often took roughly 6 to 12 months to build and deploy these systems.
(08:59) And some of them turned out to be really valuable. But this is a realistic timeline for building and deploying a commercial grade AI system. In contrast, with prompt-based AI, where you write a prompt. This is what the workflow looks like. You can specify a prompt, that takes maybe minutes or hours. And then, you can deploy it to the cloud, and that takes maybe hours or days.
(09:23) So there are now certain AI applications that used to take me, literally, six months, maybe a year to build, that many teams around the world can now build in maybe a week. And I think this is already starting, but the best is still yet to come. This is starting to open up a flood of a lot more AI applications that can be built by a lot of people.
(09:45) So I think many people still underestimate the magnitude of the flood of custom AI applications that I think is going to come down the pipe. Now, I know you probably were not expecting me to write code in this presentation, but that's what I'm going to do. So it turns out, this is all the code that I need in order to write a sentiment classifier.
(10:10) So I'm going to-- some of you will know Python, I guess. Import some tools from OpenAI, and then add this prompt, that says, classify the text below delimited by three dashes as having either a positive or negative sentiment. [INAUDIBLE],, I had a fantastic time at Stanford GSB. Learnt a lot, and also made great new friends.
(10:41) All right. So that's my prompt. And then I'm just going to run it. And I've never run it before. So I really hope-- thank goodness, it got the right answer. [APPLAUSE] And this is literally all the code it takes to build a sentiment classifier. And so, today, developers around the world can take, literally, maybe 10 minutes to build a system like this.
(11:05) And that's a very exciting development. So one of the things I've been working on was trying to teach online classes about how to use prompting, not just as a consumer tool but as a developer too. So just talking about the technology landscape, let me now share my thoughts on what are some of the AI opportunities I see.
(11:35) This shows what I think is the value of different AI technologies today, and I'll talk about three years from now. But the vast majority of financial value from AI today is, I think, supervised learning, where for a single company like Google can be worth more than $100 billion US a year. And also, there are millions of developers building supervised learning applications.
(11:59) So it's already massively valuable, and also with tremendous momentum behind it just because of the sheer effort in finding applications and building applications. And then, generative AI is the really exciting new entrant, which is much smaller right now. And then, there are the other tools that I'm including for completeness.
(12:18) If the size of these circles represent the value today, this is what I think it might grow to in three years. So supervised learning, already really massive, may double, say, in the next three years, from truly massive to even more massive. And generative AI, which is much smaller today, I think, will much more than double in the next three years because of the number-- the amount of developer interest, the amount of venture capital investments, the number of large corporates exploring applications.
(12:47) And I also just want to point out, three years is a very short time horizon. If it continues to compound in anything near this rate, then in six years, it will be even vastly larger. But this light shaded region in green or orange, that light shaded region is where the opportunity is for either new startups or for large companies, incumbents, to create and to enjoy value capture.
(13:10) But one thing I hope you take away from this slide is that all of these technologies are general purpose technologies. So in the case of supervised learning, a lot of the work that had to be done over the last decade, but is continuing for the next decade, is to identify and to execute on the concrete use cases.
(13:27) And that process is also kicking off for generative AI. So for this part of the presentation, I hope you take away from it that general purpose technology is a useful for many different tasks, lot of value remains to be created using supervised learning. And even though, we're nowhere near finishing figuring out the exciting use cases of supervised learning, we have this other fantastic tool of generative AI, which further expands the set of things we can now do using AI.
(13:55) But one caveat, which is that there will be short term fads along the way. So I don't know if some of you might remember the app called Lensa. This is the app that will let you upload pictures of yourself, and then will render a cool picture of you as an astronaut or a scientist or something. And it was a good idea and people liked it.
(14:15) And its revenue just took off like crazy like that, through last December. And then it did that. And that's because Lensa was-- it was a good idea. People liked it. But it was a relatively thin software layer on top of someone else's really powerful APIs. And so even though it was a useful product, it was in a defensible business.
(14:40) And when I think about apps like Lensa, I'm actually reminded of when Steve Jobs gave us the iPhone. Shortly after, someone wrote an app that I paid $1.99 for, to do this, to turn on the LED, to turn the phone into a flashlight. And that was also a good idea to write an app to turn on the LED light, but it also wasn't a defensible long term-- also didn't create very long term value because it was easily replicated, and underpriced, and eventually incorporated into iOS.
(15:11) But with the rise of iOS, with the rise of iPhone, someone also figured out how to build things like Uber, and Airbnb, and Tinder. The very long term, very defensible businesses that created sustaining value. And I think, with the rise of generative AI or the rise of new AI tools, I think, really, what excites me is the opportunity to create those really deep, really hard applications that hopefully can create very long term value.
(15:42) So the first trend I want to share is AI is a general purpose technology. And a lot of the work that lies ahead of us, is to find the very diverse use cases and to build them. There's a second trend I want to share with you, which relates to why AI isn't more widely adopted yet. It feels like a bunch of us have been talking about AI for 15 years or something.
(16:02) But if you look at where the value of AI is today, a lot of it is still very concentrated in consumer software internet. Once you got outside tech or consumer software internet, there's some AI adoption but it all feels very early. So why is that? It turns out, if you were to take all current and potential AI projects, and sort them in decreasing order of value, then to the left of this curve, of the head of this curve, are the multi-billion dollar projects like advertising or web search or for e-commerce product recommendations
(16:36) or company like Amazon. And it turns out that about 10, 15 years ago, [? there's ?] my friends and I, we figured out a recipe for how to hire, say, 100 engineers to write one piece of software to serve more relevant ads, and apply that one piece of software to a billion users, and generate massive financial value.
(16:54) So that works. But once you go outside consumer software internet, hardly anyone has 100 million or a billion users that you can write and apply one piece of software to. So once you go to other industries, as we go from the head of this curve on the left over to the long tail, these are some of the projects I see, and I'm excited about.
(17:18) I was working with a pizza maker that was taking pictures of the pizza they were making because they needed to do things like make sure that the cheese is spread evenly. So this is about a $5 million project. But that recipe of hiring a hundred engineers or dozens of engineers to work on a $5 million project, that doesn't make sense.
(17:40) Or there's another great example. Working with a agriculture company that with them, we figured out that if we use cameras to find out how tall is the wheat, and wheat is often bent over because of wind or rain or something, and we can chop off the wheat at the right height, then that results in more food for the farmer to sell, and is also better for the environment.
(18:00) But this is another $5 million project, that that old recipe of hiring a large group of highly skilled engineers to work on this one project, that doesn't make sense. And similarly materials grading, cloth grading, sheet metal grading, many projects like this. So whereas to the left, in the head of this curve, there's a small number of, let's say, multi-billion dollar projects, and we know how to execute those delivering value.
(18:25) In other industries, I'm seeing a very long tail of tens of thousands, of let's call them, $5 million projects, that until now, have been very difficult to execute on because of the high cost of customization. The trend that I think is exciting is that the AI community has been building better tools that lets us aggregate these use cases, and make it easy for the end user to do the customization.
(18:50) So specifically, I'm seeing a lot of exciting low code and no code tools, that enable the user to customize the AI system. What this means is instead of me, needing to worry that much about pictures of pizza, we have tools-- we're starting to see tools that can enable the IT department of the pizza making factory to train AI system on their own pictures of pizza to realize this $5 million worth of value.
(19:16) And by the way, the pictures of pizza, they don't exist on the internet. So Google and Bing don't have access to these pictures, we need tools that can be used by, really, the pizza factory themselves, to build, and deploy, and maintain their own custom AI system that works on their own pictures of pizza.
(19:34) And broadly, the technology for enabling this, some of it is prompting, text prompting, visual prompting, but really, large language models and similar tools like that or a technology called data-centric AI, whereby, instead of asking the pizza factory to write a lot of code, which is challenging, we can ask them to provide data which turns out to be more feasible.
(20:02) And I think the second trend is important, because I think this is a key part of the recipe for taking the value of AI, which so far still feels very concentrated in the tech world and the consumer software internet world, and pushing this out to all industries, really to the rest of the economy, which-- sometimes it's easy to forget, the rest of the economy is much bigger than the tech world.
(20:24) So the two trends I shared, AI as a general purpose technology, lots of concrete use cases to be realized as well as low code, no code, easy to use tools, enabling AI to be deployed in more industries. How do we go after these opportunities? So about five years ago, there was a puzzle I wanted to solve, which is-- I felt that many valuable AI projects are now possible.
(20:48) And I was thinking, how do we get them done? And having led teams in Google, and Baidu, in big tech companies, I had a hard time figuring out how I could operate a team in a big tech company to go after a very diverse set of opportunities in everything from maritime shipping to education to financial services to healthcare, and on and on.
(21:09) It's just very diverse use cases, very diverse go to markets, and very diverse customer bases and applications. And I felt that the most efficient way to do this would be if we can start a lot of different companies to pursue these very diverse opportunities. So that's why I ended up starting AI Fund, which is a venture studio that builds startups to pursue a diverse set of AI opportunities.
(21:35) And, of course, in addition to lots of startups, incumbent companies also have a lot of opportunities to integrate AI into existing businesses. In fact, one pattern I'm seeing for incumbent businesses is distribution is often one of the significant advantages of incumbent companies, if they play their cards right, can allow them to integrate AI into their products, quite efficiently.
(22:00) But just to be concrete, where are the opportunities? So I think of this as-- this is what I think of as an AI stack. At the bottom level is the hardware, semiconductor layer. Fantastic opportunities there, but very capital intensive, very concentrated. So needs a lot of resources, relatively few winners.
(22:17) So some people can and should play there. I personally don't like to play there myself. There's also the infrastructure layer. Also fantastic opportunities, but very capital intensive, very concentrated. So I tend not to play there myself, either. And then there's the developer tool layer. What I showed you just now was-- I was actually using OpenAI's API as a developer tool.
(22:38) And then, I think the developer tool sector is a hypercompetitive. Look at all the startups chasing OpenAI right now. But there will be some mega winners. And so I sometimes play here, but primarily, when I think of a meaningful technology advantage, because I think that earns you the right or earns you a better shot at being one of the mega winners.
(23:01) And then lastly, even though a lot of the media attention and the buzz is in the infrastructure and developer tooling layer, it turns out that layer can be successful only if the application layer is even more successful. And we saw this with the rise of SaaS as well. Lot of the buzz and excitement is on the technology, the tooling layer.
(23:22) Which is fine. Nothing wrong with that. But the only way for that to be successful is if the application layer is even more successful, so that, frankly, they can generate enough revenue to pay the infrastructure, and the tooling layer. So, actually, let me mention one example. Amorai-- I was actually just texting the CEO yesterday.
(23:40) But Amorai is a company that we built that uses AI for romantic relationship coaching. And just to point out, I'm an AI guy. And I feel like I know nothing really about romance. And if you don't believe me, you can ask my wife, she will confirm that I know nothing about romance. But when we went to build this, we wanted to get together with the former CEO of Tinder, Renate Nyborg.
(24:10) And with my team's expertise in AI, and her expertise in relationships because she ran Tinder, she knows more about relationships than I think anyone I know, we're able to build something pretty unique using AI for kind of romantic relationship mentoring. And the interesting thing about applications like these is when we look around, how many teams in the world are simultaneously expert in AI and in relationships? And so at the application layer, I'm seeing a lot of exciting opportunities that seem to have a very large market,
(24:44) but where the competition sets is very light, relative to the magnitude of the opportunity. It's not that there are no competitors, but it's just much less intense compared to the developer tool or the infrastructure layers. And so, because I've spent a lot of time iterating on a process of building startups, what I'm going to do is just, very transparently, tell you the recipe we've developed for building startups.
(25:08) And so after many years of iteration and improvement, this is how we now build startups. My team's always had access to a lot of different ideas, internally generated, ideas from partners. And I want to walk through this with one example of something we did, which is a company Bearing AI, which uses AI to make ships more fuel efficient.
(25:29) So this idea came to me when, a few years ago, a large Japanese conglomerate called Mitsui, that is a major shareholder and operates major shipping lines, they came to me and they said, hey, Andrew, you should build a business to use AI to make ships more fuel efficient. And the specific idea was, think of it as a Google Maps for ships.
(25:50) We can suggest a ship or tell a ship how to steer, so that you still get to your destination on time, but using, it turns out, about 10% less fuel. And so what we now do is we spend about a month, validating the idea. So double check, is this idea even technically feasible, and then talk to prospective customers to make sure there is a market need.
(26:11) So we spent up to about a month doing that. And if it passes this stage, then we will go and recruit a CEO to work with us on the project. When I was starting, out I used to spend a long time working on a project myself, before bringing on a CEO. But after iterating, we realized that bringing on a leader at the very beginning to work with us, it reduces a lot of the burden of having to transfer knowledge or having a CEO come in and having to revalidate what [? we ?] discovered.
(26:39) So the process is, we've, learned much more efficient, we just bring the leader at the very start. And so in the case of Bearing AI, we found a fantastic CEO, Dylan Keil, who is a reputed entrepreneur, one successful exit before. And then we spent three months, six, two week sprints, to work with them to build a prototype as well as do deep customer validation.
(27:01) If it survives this stage, and we have about a two thirds, 66% survival rate, we then write the first check in, which then gives the company resources to hire an executive team, build the key team, get an MVP working, minimum viable product working, and get some real customers. And then after that, hopefully, then successfully raises additional external rounds of funding, and can keep on growing and scaling.
(27:26) So I'm really proud of the work that my team was able to do to support Mitsui's idea, and Dylan Keil, as CEO. And today, there are hundreds of ships, on the high seas right now, that are steering themselves differently because of Bearing AI. And 10% fuel savings translates to around to maybe $450,000 in savings in fuel, per, ship per year.
(27:50) And, of course, it's also, frankly, quite a bit better for the environment. And I think this startup, I think, would not have existed if not for Dylan's fantastic work, and then also, Mitsui bringing this idea to me. And I like this example because this is another one is like-- this is a startup idea that, just to point out, I would never have come up with myself.
(28:14) Because I've been on a boat but what do I know about maritime shipping. But is the deep subject matter expertise of Mitsui, that had this insight, together with Dylan, and then my team's expertise in AI, that made this possible. And so as I operate in AI, one thing I've learned is my swim lane is AI, and that's it.
(28:36) Because I don't have time or it's very difficult for me to be expert in maritime shipping, and romantic relationships, and health care, and financial services, and on, and on, and on. And so I've learned that if I can just help get a accurate technical validation, and then use AI resources to make sure the AI tech is built quickly and well, and I think, we've always managed to help the companies build a strong technical team, then partnering with subject matter experts often results in exciting new opportunities.
(29:05) And I want to share with you one other weird aspect of-- one other weird thing I've learned about building startups, which is I like to engage only when there's a concrete idea. And this runs counter to a lot of the advice you hear from the design thinking methodology, which often says, don't rush to solutioning.
(29:25) Explore a lot of alternatives before you do a solution. Honestly, we tried that, it was very slow. But what we've learned is that at the ideation stage, if someone comes to me and says, hey, Andrew, you should apply AI to financial services. Because I'm not a subject matter expert in financial services, it's very slow for me to go and learn enough about financial services, to figure out what to do.
(29:49) I mean, eventually, you could get to a good outcome, but it's a very labor intensive, very slow, very expensive process, for me, to try to learn industry after industry. In contrast, one of my partners wrote this idea as a tongue in cheek, not really seriously. But, let's say, [INAUDIBLE] by GPT, let's eliminate commercials by automatically buying every product advertised in exchange for not having to see any ads, it's not a good idea, but it is a concrete idea.
(30:16) And it turns out, concrete ideas can be validated or falsified, efficiently. They also give a team a clear direction to execute. And I've learned that in today's world, especially, with the excitement, the buzz, the exposure to AI of a lot of people, it turns out that there are a lot of subject matter experts in today's world, that have deeply thought about a problem for months, sometimes even one or two years.
(30:41) But they've not yet had a build partner. And when we get together with them, and hear, and they share the idea of us, it allows us to work with them to very quickly go into validation and building. And I find that this works because there are a lot of people that have already done the design thinking thing of exploring a lot of ideas and winnowing down to really good ideas.
(31:02) And there are-- I find that there are so many good ideas sitting out there, that no one is working on. That finding those good ideas that someone has already had, and wants to share with us, and wants to build partner for, that turns out to be a much more efficient engine. So before I wrap up, we'll go to the question in a second, just a few slides to talk about risk and social impact.
(31:26) So AI is very powerful technology. To say something you'd probably guess, my teams and I, we only work on projects that move humanity forward. And we have multiple times killed projects that we assess to be financially sound, based on ethical grounds. It turns out, I've been surprised and sometimes dismayed at the creativity of people to come up with good ideas.
(31:49) So to come up with really bad ideas that seem profitable but really should not be built. We've killed a few projects on those grounds. And then, I think, has to be acknowledged that AI today does have problems with bias, fairness, and accuracy. But also the technology is improving quickly. So I see that AI systems today are less biased than six months ago, and more fair than six months ago, which is not to dismiss the importance of these problems.
(32:17) They are problems and we should continue to work on them. But I'm also gratified at the number of teams working hard on these issues to make them much better. When I think of the biggest risks of AI. I think that the biggest risks-- one of the biggest risks is the disruption to jobs. This is a diagram from a paper by our friend at the University of Pennsylvania, and some folks at OpenAI, analyzing the exposure of different jobs to AI automation.
(32:44) And it turns out that, whereas, the previous wave of automation mainly-- the most exposed jobs were often the lower wage jobs, such as when we put robots into factories. With this current wave of automation, is actually the higher wage jobs, further, to the right of this axis, that seems to have more of their tasks exposed to automation.
(33:06) So even as we create tremendous value using AI, I feel like, as citizens, and our corporations, and our governments, and, really, our society, I feel a strong obligation to make sure that people, especially people whose livelihoods are disrupted, are still well taken care of, are still treated well. And then lastly, there's also been-- it feels like every time there's a big wave of progress in AI, there's a big wave of hype about artificial general intelligence as well.
(33:40) When DeepLearning started work really well 10 years ago, there was a lot of hype about AGI. And now, the generative AI is working really well, there's another wave of hype about AGI. But I think that artificial general intelligence, AI that can do anything a human can do is still decades away, maybe 30 to 50 years, maybe even longer.
(33:58) I hope we'll see it in our lifetimes. But I don't think there's any time soon. One of the challenges is that the biological path to intelligence, like humans and the digital path to intelligence, AI, they've taken very different paths. And the funny thing about the definition of AGI is you're benchmarking this very different digital path to intelligence with really the biological path to intelligence.
(34:22) So I think, large language models are smarter than any of us in certain key dimensions, but much dumber than any of us in other dimensions. And so forcing it to do everything a human can do is like a funny comparison. But I hope we'll get there. Hopefully, within our lifetimes. And then there's also a lot of, I think, overblown hype about AI creating extinction risks for humanity.
(34:46) Candidly, I don't see it. I just don't see how AI creates any meaningful extinction risk for humanity. I think that people worry we can't control AI. But we have lots of, AI will be more powerful than any person. But with lots of experience, steering, very powerful entities, such as corporations or nation states that are far more powerful than any single person, and making sure they, for the most part, benefit humanity.
(35:12) And also technology develops gradually. The so-called hot take off scenario, where it's not really working today, and then suddenly, one day, overnight, it works brilliantly, and we achieve super intelligence, takes over the world. That's just not realistic. And I think the AI technology will develop slowly, like all the-- and then it gives us plenty of time to make sure that we provide oversight and can manage it to be safe.
(35:36) And lastly, if you look at the real extinction risk to humanity, such as, fingers crossed, the next pandemic or climate change, leading to a massive de-population of some parts of the planet, or much lower odds, but maybe someday, an asteroid doing to us what it had done to the dinosaurs. I think if we look at the actual real extinction risk to humanity, AI having more intelligence, even artificial intelligence in the world, would be a key part of the solution.
(36:05) So I feel like if you want humanity to survive and thrive for the next 1,000 years, rather than slowing AI down, which some people propose, I would rather make AI go as fast as possible. So with that, just to summarize, this is my last slide. I think that AI, as a general purpose technology creates a lot of new opportunities for everyone.
(36:29) And a lot of the exciting and important work that lies ahead of us all is to go and build those concrete use cases, and hopefully, in the future, hopefully, I'll have opportunities to maybe engage with more of you on those opportunities as well. So with that, let me just say, thank you all very much. [APPLAUSE]
